/**
 * ReaScript Name: Round selected envelope points value
 * About: It will behave differently, depending on the encelope type.
 * Instructions: Use it.
 * Author: X-Raym
 * Author URI: https://www.extremraym.com
 * Repository: GitHub > X-Raym > REAPER-ReaScripts
 * Repository URI: https://github.com/X-Raym/REAPER-ReaScripts
 * Licence: GPL v3
 * Forum Thread: ReaScript: ReaScript: Round selected envelope points value
 * Forum Thread URI: http://forum.cockos.com/showthread.php?p=1487899#post1487899
 * Version: 1.3.1
 * Version Date: 2015-02-26
 * REAPER: 5.0 pre 9
 */

/**
 * Changelog:
 * v1.3.1 (2015-09-09)
  # Better dB calculation
 * v1.3 (2015-09-09)
  + Fader scaling support
 * v1.2 (2015-07-11)
  + Send support
 * v1.1 (2015-02-26)
  + Pitch envelope are rounded at 0.5
  + Mute envelope are rounded at 0 or 1
 * v1.0 (2015-02-09)
  + Initial Release
 */

// ----- DEBUGGING ====>
@import ../Functions/X-Raym_Functions - console debug messages.eel

debug = 0; // 0 => No console. 1 => Display console messages for debugging.
clean = 0; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();
// <==== DEBUGGING -----

function floorPoint (value, type, scale)
(
  calc = 0;
  stricmp("VOLUME", type) == 0 || stricmp("VOLUME (PRE-FX)", type) == 0 || stricmp("Send Volume", type) == 0 ? (
      scale == 1 ? (
        value = ScaleFromEnvelopeMode(1, value);
      );
      OldVol=value;
      OldVolDB=20*(log10(OldVol));

      NewVolDB=floor(OldVolDB + 0.5);
      calc=pow(10, NewVolDB / 20);

      scale == 1 ? (
        calc = ScaleToEnvelopeMode(1, calc);
      );
      ): stricmp("MUTE", type) == 0 || stricmp("Send Mute", type) == 0 ? (
          value < 0 ? (
            calc = 0;
            msg_s("Mute = 0");
          );
          value >= 1 ? (
            calc = 1;
            msg_s("Mute = 1");
          );
          value < 0.5 ? (
            calc = 0;
            msg_s("Mute Floor < 0.5");
          );
          value >= 0.5 ? (
            calc = 1;
            msg_s("0.5 <= Mute Floor");
          );

        ): stricmp("PITCH", type) == 0 ? (
          value <= -3 ? (
            calc = -3;
            msg_s("Pitch <= -3");
          );
          value >= 3 ? (
            calc = 3;
            msg_s("Pitch <= +3");
          );
          value > -3 && calc < 3 ? (
            calc = floor((value)+0.5);
            msg_s("-3 < Pitch < 3");
          );
      ):(
      calc = floor((value)*20+0.5)/20;
    );

  calc;
);

function round_point_value() local (i)
(
  Undo_BeginBlock(); // Begining of the undo block. Leave it at the top of your main function.

  // GET SELECTED TRACK ?
  envelope = GetSelectedEnvelope(0);
  env_point_count = CountEnvelopePoints(envelope);

  // GET ENVELOPE RANGE -- HERE IT IS
  GetEnvelopeName(envelope, #buf);
  match("%s", #buf, envelopeName);

  env_scale = GetEnvelopeScalingMode(envelope);

  // VALUE
  i = 0;
  loop (env_point_count, i ? (

      // IDX 0 doesnt seem to work
      GetEnvelopePoint(envelope, i, timeOutOptional, valueOut, shapeOutOptional, tensionOutOptional, selectedOut);

      selectedOut == 1 ? (

        valueIn = floorPoint(valueOut, envelopeName, env_scale);

        timeInOptional = timeOutOptional;
        shapeInOptional = shapeOutOptional;
        tensionInOptional = tensionOutOptional;

        // SET POINT VALUE
        SetEnvelopePoint(envelope, i, timeInOptional, valueIn, shapeInOptional, tensionInOptional, 1, noSortInOptional);

      );


    );

    i += 1;

  );

  Undo_EndBlock("Round selected envelope points value", 0); // End of the undo block. Leave it at the bottom of your main function.

);

msg_start(); // Display characters in the console to show you the begining of the script execution.

round_point_value(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

msg_end(); // Display characters in the console to show you the end of the script execution.